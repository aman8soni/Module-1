#!/usr/bin/env node

/**
 * Module dependencies.
 */

var app = require('../app');
var debug = require('debug')('module:server');
var http = require('http');
//var http = require('http').Server(app);

/**
 * Get port from environment and store in Express.
 */

var port = normalizePort(process.env.PORT || '3000');
app.set('port', port);

/**
 * Create HTTP server.
 */


var server = http.createServer(app);



/*Data Base Integration*/

var mysql = require('mysql');

var mysqlConnect = mysql.createConnection({
  host     : 'localhost',
  user     : 'dezyre_user',
  password : 'omair123!',
  port : '3306',
  database : 'dezyre_db'
}); 

mysqlConnect.connect(function(err){
  if(err)
    console.log("www : "+err);
  else
    console.log("./bin/www to Database");
});

/*socket Chat integration*/
var io = require('socket.io')(server);

io.on('connection', function(socket){
  socket.on('join', function(data){
    socket.join(data[0]);
    /*datum=[data[0],data[1],data[2],": Joined"]
    io.to(data[0]).emit('chat-message',datum);
    console.log(data[1]+" joined");
    data_mess=datum;
    var insert_into_chat ={
          group_number:data_mess[0],
          user_id:data_mess[1],
          project_id:data_mess[2],
          message:data_mess[3]
        }
    mysqlConnect.query("insert into project_chat set ?",insert_into_chat,function(err){
          if(err)
            console.log(err);
          else
            console.log("done");
        });
  */
  });
  //socket.on('disconnect', function(){
  //  console.log('user disconnected');
});

io.on('connection', function(socket){
    socket.on('chat-message', function(data_mess){
        console.log("Server :" + data_mess[0]+"     "+data_mess[1]+"   "+data_mess[2]+"   "+data_mess[3]);
        io.to(data_mess[0]).emit('chat-message',data_mess);

        var insert_into_chat ={
          group_number:data_mess[0],
          user_id:data_mess[1],
          project_id:data_mess[2],
          message:data_mess[3]
        }

        mysqlConnect.query("insert into project_chat set ?",insert_into_chat,function(err){
          if(err)
            console.log(err);
          else
            console.log("done");  
        });

        
      });
});







/*end*/

/*forum upvotes*/
io.on('connection',function(socket)
{
  socket.on('upvote', function(data)
  {
      console.log("project_question_id "+data);
      mysqlConnect.query('SELECT vote_count,upvoteflag FROM project_question WHERE project_question_id = ?',[data], function(err,fields)
      {
        flag = fields[0].upvoteflag;
        if (err)
                console.log("Error selecting : %s ",err );
        else if(flag == 0)
        {
          //console.log(rows);
          v_count = fields[0].vote_count;
          //console.log(fields[0].project_id);
          //console.log(fields[0].user_id);
          console.log("Current : "+v_count);
          v_count = v_count + 1;
          console.log("Edited : "+v_count);
          console.log(data);
          mysqlConnect.query('UPDATE project_question SET vote_count = ? where project_question_id=?',[v_count,data], function(err)
          {
            if (err)
                    console.log("Error inserting : %s ",err );
            else
               app.get('/forum');
           });
          io.emit('refresh vote',v_count);
          flag = flag + 1;
          mysqlConnect.query('UPDATE project_question SET upvoteflag = ? WHERE project_question_id = ?', [flag,data],function(err){
            if(err)
              console.log("Error in setting flag: %s", err);
          });


        }
        
    });
  });
});

io.on('connection',function(socket)
{
  socket.on('ans_upvote', function(ans_data)
  {

      console.log("project_answer_id "+ans_data);
      mysqlConnect.query('SELECT vote_count, project_question_id FROM project_answer WHERE project_answer_id = ?',[ans_data], function(err,fields)
      {
        if (err)
                console.log("Error selecting : %s ",err );
        else
        {
          var id = fields[0].project_question_id;
          console.log(id);
          va_count = fields[0].vote_count;
          console.log(fields);
          console.log("Current : "+va_count);
          va_count = va_count + 1;
          console.log("Edited : "+va_count);
          mysqlConnect.query('UPDATE project_answer SET vote_count = ? where project_answer_id=?',[va_count,ans_data], function(err)
          {
            if (err)
                    console.log("Error inserting : %s ",err );
            else
               app.get('/forum/question/'+id);
           });
        }
    });
  });
});







/**
 * Listen on provided port, on all network interfaces.
 */


server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

/**
 * Normalize a port into a number, string, or false.
 */

function normalizePort(val) {
  var port = parseInt(val, 10);

  if (isNaN(port)) {
    // named pipe
    return val;
  }

  if (port >= 0) {
    // port number
    return port;
  }

  return false;
}

/**
 * Event listener for HTTP server "error" event.
 */

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

/**
 * Event listener for HTTP server "listening" event.
 */

function onListening() {
  var addr = server.address();
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  debug('Listening on ' + bind);
}
